<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCABMAI0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDeKR6lhi8cN3/Fu+VJff0B/Tp3qtNY3ED7JkMbejCnRRls4BOB
        k4q9bXVzCoRJSU/uN8y/ka3jmWIStf8ABHpRzTFRVlL8EZwtHP8AEtPFhIf41/KtuCdnyWhteBnLQjn/
        ADipY7qcY8vZH7pGAe3f8BVf2lie/wCCH/a2K/m/BGVDoNwwDzSJFF/ecEZ+g71LdaY0qRw2zKkMZ3Bj
        nczf3jj9B2960gjvh3LNnjceelWI46HmGIe7/Al5piZPV/gjFt9Ck6TvHKvHIJRh074IPA7jvnmlbw5I
        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
</value>
  </data>
</root>