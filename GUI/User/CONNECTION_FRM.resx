<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAACAgAAABAAgAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAABAAAAAAAA////AAAA/wCoqP8AWFj/AEBA/wAoKP8AiIj/APj4/wBgYP8AeGDYAEhI
        /wB4eP8ASDjgABAA4ABAOJAAaGj/AJCI4AAoGKAAcHD/AFBAoADAwP8AkJD/AFBQ/wC4uP8AODj/AKiY
        4ACgoP8AAAB4ACgAyACYgOgAYFC4AGBQoAC4sOAAwLjwANDQ/wCQiNAAmIjIABAAqAAwGHgAMDD/ADAY
        iAAgGIAA0NDoAGBIyAAYAMAAGBj/AGBA0ABgUNAAGACgABAQ/wAgAKAAEACAACAg/wAgAIgAAABgADAg
        cAAQAGAAeHDQAIB40ACooPgA2Nj/AMjI/wDw8PgA8PD/AICA/wCAgPgAmJj/AODg/wDY0PgAEBj/ABAA
        kAAgAJAAEABwACAYcAAgEGgAIBBwAMjA6AAQAGgAGAB4ABgAkACwsP8AyMjoACAAqAAgALgA0MD4ANDI
        +AAYALAA+PD/ACAAsAAgAJgAGABwAMC42AAQAFgAwLjQALC4/wDg4PgA0ND4AJiY+ABoaPgA///4APDo
        /wDw6PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgICAgICAgAEDgICAgICAgICAGxsbgAEBAwMDgICAgICAJhtG
        JQxFMQUEAwaAgICAOzhIRzINAS0nFg9AAoCAFRUOSSgRgAgBBAhiQWGAgAYSF4CAgICAAwaAgClLShcD
        CA8CEoCAgIAGgIA1Tk1QBAoEBQ+AgICAgIArME8TgBgFBS0PgICAgIAsLFNSgAoBAQEDgICAgICAgIAc
        LoALBkAVgDGAgICAgC8JgICAgICAgBYxD4CAgB4wVgmAgICAgAU0GAQXgB8zWTJYgICAgBoaCggPQTc2
        WjU4gICAgICAgAsLBkI5XDg4gICAgICAgICAGgICXjo4gICAgID/n///8Qf//+AD///AAf//gQH//4+Y
        //8D2P//A/D//4Ph//8H+f//C+f///HD///gg///wAf///AP///4H///KAAAACAAAABAAAAAAQAIAAAA
        AACABAAAAAAAAAAAAAAAAQAAAAAAAP///wAAAP8AqKj/ABgY/wAoKP8AUFD/AGBg/wAgIP8AODj/AEBA
        /wAwMP8AGABgAGho/wAQEP8AWFj/AHh4/wBISP8AcHD/AICA/wAoAMgAiIj/AJiY/wCQkP8AKAC4ACAA
        gACgoP8AKACwACAAmAAYAHAAKADAACAAoAAgAJAAGAB4ACAAiAAYAGgAKACoACAAqAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////////////////////wf/////////////////
        //////////////////////8DB///////////////////////////////////////AQMH////////////
        /////////////xgfGyMXHRP//wEBAwQKCQUGDP///////////////wscGCEbHhoXE/8BAQ0DBAgJBQYM
        DxT///////////8CCyIgGB8eIxcdAQEBDQcECBAFBhEPFBX/////////AgILIhwYIRskGh0BAQENBwoI
        EA4GERIUFQL///////8CAgsLHCAhHx4jFwEBAQMHCgkQDgwREhYVAv//////GRkZCwsiHBgfGyQa/wEB
        AwcKCQUODA8SFhkCAv////8VFhYWCwscICEbHhr//wEDBAoJBQYMDxQWGQIC////FBQUEhL/////////
        /////wMECP////8gHBwiCwsL//8PDw8PEf///////////////wQI//////8YIBwiIgv/EREMDAwMBv//
        Bg7//////////wj//////yEYGCAcIv8GBgYGDg4OBQUFBf////////////////8bGx8hGCAg/w4FBQUF
        EBAQCQkJ/////////////////yMeGx8fIRj/EBAJCQkJCAgICv////////////////8XGiMkHhsf////
        CAgKCgoKBAQE/////////////////x0dFxojHh7///8EBAQHBwcHA/////////////////8TExMdFxca
        ////BwcDAwMDDQ0N//////////////////8TExMTHRf//wMNDQ0BAQEBAf//////////////////////
        ExMT////AQEBAQEBAQH///////////////////8dE///ExP//////////////////wH/////////////
        GhcdE////////////////////wENAwP//////////x4jGhcdE////////////////w0DAwcEBAr/////
        //8fGx4jGhcdE/////////////8DBwQECggICf//////GCEfGx4jGhcd////////////BAQKCAgJEAUF
        Dgb//xwgGCEfGx4kGhf//////////////wkQBQUOBgYM/wsLIhwgGCEfG/8kGv//////////////BQ4G
        BgwREQ8SCwsLIhwgGCH/////////////////////DBERDxISFBYVCwsLIhwg////////////////////
        //8PEhIUFhUVGQICCwsLIv////////////////////////8WFRUZAgICAgICCwv/////////////////
        //////////8CAgICAgICAgIC///////////////////3////5////8f//wGAP/wBAA/4AAAH8AAAA/AA
        AAPgAQAB4AGAAcH/x4DB/+fAgM/3wIAP/4CAD/+AgB//AcAf/wHAP/4DgD//AwB//8cA//5n/+/8P/+H
        +B/+A/AP/APgD/gAwA/+AQBP/gAA//8AAf//AAP//4AH///AD/8=
</value>
  </data>
</root>